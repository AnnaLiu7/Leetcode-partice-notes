学习笔记：

704. 二分查找 
https://leetcode.cn/problems/binary-search/

  方法一：
  class Solution:
      def search(self, nums: List[int], target: int) -> int:
          nums = sorted(nums)
          if target not in nums:
              return -1
          return nums.index(target)
  思考：
       没有使用到二分法，主要使用python中自带的方法库，整理了一下sort和sorted的用法，还有index的用法

  使用双指针解题
  方法二：
  class Solution:
      def search(self, nums: List[int], target: int) -> int:
          l,r = 0,len(nums)-1
        while l <= r :
            mid = (l + r) // 2
            if nums[mid]== target:
                return mid
            elif nums[mid] < target:
                l = mid +1
            else:
                r = mid-1
        return -1



  思考：
  在定义l，r的时候分为两种情况
1）l,r = 0, len(nums)-1
  此时l，r都在list内部，都有取值 --> 循环使用 while (left <= right)
2）l,r = 0, len(nums)
  此时l在list内部，有取值，r没有取值 --> 循环使用 while (left < right)

【注意点】：  
1. mid需要在while循环内重复计算，因为l和r更新了位置
2. nums[mid] > target 时，应该将 r 更新为 mid-1



27. 移除元素
https://leetcode.cn/problems/remove-element/description/
解答：
class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:
        i =0
        while i < len(nums):
            if nums[i] == val:
                del nums[i]
            else:
                i +=1
        return  len(nums)      

思考：
del和remove的区别是什么？
del 关键字
用途：del 是一个 Python 关键字，用于删除对象。它可以删除列表中的元素，也可以删除变量。
语法：del 通过索引删除列表中的元素，或删除整个变量。
使用场景：
删除列表中的一个或多个元素。
删除整个列表或其他对象。
remove 方法
用途：remove 是列表对象的方法，用于删除列表中第一个匹配的指定值。
语法：remove 通过值来删除元素。如果列表中有多个相同的值，它只删除第一个匹配的值。
使用场景：删除列表中指定的值。

